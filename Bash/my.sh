#!/bin/bash
# This is a basic bash script.

echo $0
echo "Display items in directory"
echo
ls # Display items in directory.
echo "Basic Text"
a=Hello
b="Good Morning"
c=16

echo $a
echo $b
echo $c

echo "$b! I have $c apples."
echo

echo "Basic Commands"
echo
echo $pwd
echo $HOSTNAME
echo $BASH_VERSION
echo $SECONDS

pinging=$(ping -c 1 google.com | grep 'bytes from' | cut -d = -f 4)
echo "The ping was $pinging"
echo

echo "Variables and comparison"
echo
d=2
e=$((d+2))
echo $e
((e++))
echo $e
((e--))
echo $e
e+=5
echo $e
((e*=3))
echo $e
((e/=3))
echo $e
((e-=5))
echo $e
echo
f=$((1/3))
echo $f
g=$(echo 1/3 | bc -l)
echo $g
echo

[[ "cat" == "cat" ]]
echo $?
[[ "cat" = "dog" ]]
echo $?
[[ 20 > 100 ]]
echo $?
[[ 20 -gt 100 ]]
echo $?
echo

aa=""
bb="cat"
[[ -z $aa && -n $bb ]]
echo $?
echo

echo "Strings"
echo
aaa="hello"
bbb="world"
cc=$aaa$bbb
echo $cc
echo ${#aaa}
echo ${#bbb}
echo ${#cc}

ddd=${cc:3}
echo $ddd
e=${cc:3:4}
echo $e
echo ${cc: -4}
echo ${cc: -4:3}
fruit="apple banana banana cherry"
echo ${fruit/banana/durian}
echo ${fruit//banana/durian}
echo ${fruit/cherry/awesome}
echo ${fruit/#apple/durian}
echo ${fruit/#banana/durian}
echo ${fruit/%cherry/durian}
echo ${fruit/%banana/durian}
echo ${fruit/c*/durian}
echo

echo "Coloring and Styling text"
echo

echo -e
echo -e '\033[30;36mColor Text\033[0m'
echo -e '\033[5;31;40mERROR: \033[0m\033[31;40mSomething went wrong.\033[0m'
flashred="\033[5;31;40m"
red="\033[31;40m"
none="\033[0m"
echo -e $flashred"ERROR: "$none$red"Something went wrong."$none
flashred1=$(tput setab 0; tput setaf 1; tput blink)
red1=$(tput setab 0; tput setaf 1)
none1=$(tput sgr0)
echo -e $flashred1"ERROR: "$none1$red1"Something went wrong."$none1
echo

echo "Date"
echo

echo date
echo date +"%d-%m-%y"
echo date +"%H-%M-%S"
printf "Name:\t%s\nID:\t%04d\n" "Yolanda" "12"
today=$(date +"%d-%m-%y")
time=$(date +"%H:%M:%S")
printf -v dddd "Current User:\t%s\nDate:\t\t%s @ %s\n" $USER $today $time
echo "$dddd"
echo

echo "Arrays"
echo

aaaa=()
bbbb=("apple" "banana" "cherry")
echo ${bbbb[0]}
echo ${bbbb[1]}
echo ${bbbb[2]}
bbbb[5]="kiwi"
bbbb+=("mango")
echo ${bbbb[@]}
echo ${bbbb[@]: -1}
echo

echo "Reading writing text"
echo

cat file.txt
> file.txt
echo "Some text" > file.txt
echo "More text" >> file.txt
cat file.txt
i=1
while read f; do
echo "Line $i: $f"
((i++))
done < file.txt
ftp -n < ftp.txt
ls
echo

echo "Using here documents"
echo

cat <<- EndOfText
This is a
multiline
text string
EndOfText
ftp -n <<- DoneWithTheUpdate
open.miorrors.xmission.com
user anonymous nothinghere
ascii
cd gutenberg
get GUTINDEX.01
bye
DoneWithTheUpdate
ls
echo

echo "Challenge"
echo

freespace=$(df -h / | grep -E "\/$" | awk '{print $4}')
greentext="\033[32m"
bold="\033[1m"
normal="\033[0m"
logdate=$(date +"%Y%m%d")
logfile="$logdate"_report.log

echo -e $bold"Quick system report for "$greentext"$HOSTNAME"$normal
printf "\tSystem type:\t%s\n" $MACHTYPE
printf "\tBash Version:\t%s\n" $BASH_VERSION
printf "\tFree Space:\t%s\n" $freespace
printf "\tFiles in dir:\t%s\n" $(ls | wc -l)
printf "\tGenerated on:\t%s\n" $(date +"%m/%d/%y") # US date format
echo -e $greentext"A summary of this info has been saved to $logfile"$normal

cat <<- EOF > $logfile
This report was automatically generated by my Bash script.
It contains a brief summary of some system information.
EOF

printf "SYS:\t%s\n" $MACHTYPE >> $logfile
printf "BASH:\t%s\n" $BASH_VERSION >> $logfile
echo

echo "if"
echo

aaaaa="This is my #1 string!"
if [[ $aaaaa =~ [0-9]+ ]]; then
echo "There are numbers in the string: $aaaaa"
else
echo "There are no numbers in the string: $aaaaa"
fi
echo

echo "While"
echo

i1=0
while [ $i1 -le 10 ]; do
echo i:$i1
((i1+=1))
done
j=0
until [ $j -ge 10 ]; do
echo j:$j
((j+=1))
done
echo

echo "for"
echo

for i in $(ls)
do
echo "$i"
done
echo

echo "Behavior"
echo
a1="puppy"
case $a1 in
cat) echo "Feline";;
dog|puppy) echo "Canine";;
*) echo "No Match!";;
esac
echo

echo "Functions"
echo

function numberthings {
i2=1
for f in $@; do
echo $i2: $f
((i2+=1))
done
}
numberthings $(ls)
echo

echo "Arguments"
echo

for i in $@
do
echo $i
done
echo "There were $# arguments."
echo

echo "Flags"
echo

while getopts :u:p:ab option; do
case $option in
u) user=$OPTARG;;
p) pass=$OPTARG;;
a) echo "Got the A flag";;
b) echo "Got the B flag";;
?) echo "I don't know what $OPTARG is!";;
esac
done
echo "User: $user / Pass: $pass"
echo

select option in "cat" "dog" "quit"
do
case $option in
cat) echo "Cats are evil";;
dog) echo "Dogs are awesome";;
quit) break;;
*) echo "I'm not sure what that is";;
esac
done
echo

read -p "What year? [nnnn] " a
while [[ ! $a =~ [0-9]{4} ]]; do
read -p "A yea, please! [nnnn] " a
done
echo "Selected year: $a"
echo

rand=$RANDOM
secret=${rand:0:1}

function game {
read -p "Guess a random one-digit number! " guess
while [[ $guess != $secret ]]; do
read -p "Nope, try again! " guess
done
echo "Good job, $secret is it! You're great at guessing!"
}

function generate {
echo "A random number is: $rand"
echo -e "Hint: type \033[1m$0 game\033[0m for a fun diversion!"
}

if [[ $1 =~ game|Game|GAME ]]; then
game
else
generate
fi
echo
echo


sudo mkdir -p folder1
sudo mv testfile.txt awesomefile.txt
sudo cp awesomefile.txt folder1
sudo rm folder1/awesomefile.txt
sudo mv awesomefile.txt folder1
